{"remainingRequest":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue","mtime":1610053345572},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojdGhpbmcgewogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMyYzNlNTA7CiAgbWFyZ2luLXRvcDogMjAwcHg7Cn0K"},{"version":3,"sources":["SecondUrl.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SecondUrl.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div id=\"thing\">\n        <h3>Is new user: {{ newUser }}</h3>\n        <h3>User data: {{ user_data }}</h3>\n        <router-link to='/third'>\n            <button>Take me to Third Page!</button>\n        </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/database';\n\nexport default {\n  name: 'second',\n  components: {\n  },\n  mounted() {\n    let self = this;\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            // User is signed in, create user if new\n            if (self.newUser){\n                self.createUser(user);\n            }\n            // Set user_data and check for updates to it\n            self.getUser(user.uid);\n            self.initLoop()\n        }\n        else {\n            // No user is signed in.\n            console.log(\"Error: No user is signed in!\");\n        }\n    });\n  },\n  data() {\n      return {\n          newUser: this.$cookie.get('isNewUser'),\n          user_data: null\n      }\n  },\n  methods: {\n      createUser: async function(user) {\n        await firebase.database().ref('user-data/' + user.uid).set({\n            displayName: user.displayName,\n            email: user.email,\n            uid: user.uid,\n            role: \"volunteer\",\n            site: null,\n            skills: null\n        }, function(error) {\n            if (error) {\n                // The write failed...\n                console.log(\"Error: Could not add user to database!\");\n                console.log(error);\n                return false;\n            }\n            else {\n                // Data saved successfully!\n                return true;\n            }\n        });\n      },\n      getUser: async function(user_uid) {\n        var data = await firebase.database().ref('user-data/' + user_uid).once('value').then((snapshot) => {\n            return snapshot.val();\n        });\n        this.user_data = data;\n      },\n      initLoop: async function(user_id) {\n        let self = this;\n        await firebase.database().ref('user-data/' + user_id).on('value', function(snapshot) {\n            let data = [];\n            snapshot.forEach(function(childSnapshot) {\n                data.push(childSnapshot.val());\n                // Fill the local data property with Firebase data\n                self.user_data = data;\n    });\n        });\n      }\n  }\n}\n</script>\n\n<style>\n#thing {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 200px;\n}\n</style>"]}]}