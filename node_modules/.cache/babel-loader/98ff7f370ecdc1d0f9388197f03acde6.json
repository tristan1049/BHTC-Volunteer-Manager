{"remainingRequest":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/thread-loader/dist/cjs.js!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/babel-loader/lib/index.js!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue","mtime":1608341924664},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RyaXN0YW5jdWxwL0RvY3VtZW50cy9Db2RlL0NvZGVfRm9yX0dvb2QvRXhhbXBsZVZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZS9hcHAnOwppbXBvcnQgJ2ZpcmViYXNlL2F1dGgnOwppbXBvcnQgJ2ZpcmViYXNlL2RhdGFiYXNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzZWNvbmQnLAogIGNvbXBvbmVudHM6IHt9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgdXNlciA9IGZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlcjsKCiAgICBpZiAodXNlcikgewogICAgICAvLyBVc2VyIGlzIHNpZ25lZCBpbi4KICAgICAgaWYgKHRoaXMubmV3VXNlciA9PT0gdHJ1ZSkgewogICAgICAgIHRoaXMuZGF0YWJhc2VfY3JlYXRlX3VzZXIodXNlcik7CiAgICAgIH0KCiAgICAgIHRoaXMuZGF0YWJhc2VfZ2V0X3VzZXJfZGF0YSh1c2VyLnVpZCk7IC8vdGhpcy5kYXRhYmFzZV9pbml0X3VzZXJfZGF0YV91cGRhdGVfbG9vcCh1c2VyLnVpZCk7CiAgICAgIC8vcmVkaXJlY3QodGVzdC5odG1sKQogICAgfSBlbHNlIHsKICAgICAgLy8gTm8gdXNlciBpcyBzaWduZWQgaW4uCiAgICAgIGNvbnNvbGUubG9nKCJFcnJvcjogTm8gdXNlciBpcyBzaWduZWQgaW4hIik7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmV3VXNlcjogdGhpcy4kY29va2llLmdldCgnaXNOZXdVc2VyJyksCiAgICAgIHVzZXJfZGF0YV9zdGF0aWM6IG51bGwsCiAgICAgIHVzZXJfZGF0YV9keW5hbWljOiBudWxsLAogICAgICBsb2NfZGF0YV9keW5hbWljOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy9jcmVhdGVzIGEgbmV3IHVzZXIgaW4gdGhlIGRhdGFiYXNlCiAgICBkYXRhYmFzZV9jcmVhdGVfdXNlcjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2RhdGFiYXNlX2NyZWF0ZV91c2VyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHVzZXIpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd1c2VyLWRhdGEvJyArIHVzZXIudWlkKS5zZXQoewogICAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogdXNlci5kaXNwbGF5TmFtZSwKICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsCiAgICAgICAgICAgICAgICAgIHVpZDogdXNlci51aWQsCiAgICAgICAgICAgICAgICAgIHJvbGU6ICJ2b2x1bnRlZXIiLAogICAgICAgICAgICAgICAgICBzaXRlOiBudWxsLAogICAgICAgICAgICAgICAgICBza2lsbHM6IG51bGwKICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICAvLyBUaGUgd3JpdGUgZmFpbGVkLi4uCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkVycm9yOiBDb3VsZCBub3QgYWRkIHVzZXIgdG8gZGF0YWJhc2UhIik7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgICB9IGVsc2Ugey8vIERhdGEgc2F2ZWQgc3VjY2Vzc2Z1bGx5IQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkl0IHdvcmtlZD8/Iik7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDY7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkNhdWdodCBlcnJvcjoiKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgNl1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZGF0YWJhc2VfY3JlYXRlX3VzZXIoX3gpIHsKICAgICAgICByZXR1cm4gX2RhdGFiYXNlX2NyZWF0ZV91c2VyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBkYXRhYmFzZV9jcmVhdGVfdXNlcjsKICAgIH0oKSwKICAgIGRhdGFiYXNlX2dldF91c2VyX2RhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9kYXRhYmFzZV9nZXRfdXNlcl9kYXRhID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih1c2VyX2lkKSB7CiAgICAgICAgdmFyIHNuYXBzaG90OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3VzZXItZGF0YS8nICsgdXNlcl9pZCkub25jZSgndmFsdWUnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgc25hcHNob3QgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIC8vY29uc3Qgc25hcHNob3QgPSBhd2FpdCBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndGVzdC8nKS5vbmNlKCd2YWx1ZScpOwogICAgICAgICAgICAgICAgdGhpcy51c2VyX2RhdGFfc3RhdGljID0gc25hcHNob3QudmFsKCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzbmFwc2hvdC52YWwoKSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyX2lkKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZGF0YWJhc2VfZ2V0X3VzZXJfZGF0YShfeDIpIHsKICAgICAgICByZXR1cm4gX2RhdGFiYXNlX2dldF91c2VyX2RhdGEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGRhdGFiYXNlX2dldF91c2VyX2RhdGE7CiAgICB9KCksCiAgICBkYXRhYmFzZV9pbml0X3VzZXJfZGF0YV91cGRhdGVfbG9vcDogZnVuY3Rpb24gZGF0YWJhc2VfaW5pdF91c2VyX2RhdGFfdXBkYXRlX2xvb3AodXNlcl9pZCkgewogICAgICAvLyBzZXRzIHVwIHVwZGF0ZSBsb29wIGZvciBsb2FkaW5nIGRhdGEgaW50byAidXNlcl9kYXRhX2R5bmFtaWMiCiAgICAgIC8vIGF1dG8gLSB1cGRhdGVzIHVzZXIgZGF0YSBldmVyeSB0aW1lIHRoZSBkYXRhIGNoYW5nZSAKICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3VzZXItZGF0YS8nICsgdXNlcl9pZCkub24oJ3ZhbHVlJywgZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgdGhpcy51c2VyX2RhdGFfZHluYW1pYyA9IHNuYXBzaG90LnZhbCgpOwogICAgICB9KTsgLy9jb25zb2xlLmxvZyhzbmFwc2hvdC52YWwoKSk7CiAgICB9LAogICAgZGF0YWJhc2VfaW5pdF9sb2NhdGlvbl9kYXRhX3VwZGF0ZV9sb29wOiBmdW5jdGlvbiBkYXRhYmFzZV9pbml0X2xvY2F0aW9uX2RhdGFfdXBkYXRlX2xvb3AodXNlcl9pZCkgewogICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignbG9jYXRpb24tZGF0YS8nKS5vbigndmFsdWUnLCBmdW5jdGlvbiAoc25hcHNob3QpIHsKICAgICAgICB0aGlzLmxvY2F0aW9uX2RhdGFfZHluYW1pYyA9IHNuYXBzaG90LnZhbCgpOwogICAgICAgIGNvbnNvbGUubG9nKHVzZXJfaWQpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SecondUrl.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div id=\"thing\">\n        <h3>Is new user: {{ newUser }}</h3>\n        <h3>User data: {{ user_data_static }}</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nexport default {\n  name: 'second',\n  components: {\n  },\n  created() {\n    const user = firebase.auth().currentUser;\n    if (user) {\n        // User is signed in.\n        if (this.newUser === true){\n            this.database_create_user(user);\n        }\n        this.database_get_user_data(user.uid);\n        //this.database_init_user_data_update_loop(user.uid);\n        //redirect(test.html)\n    }\n    else {\n        // No user is signed in.\n        console.log(\"Error: No user is signed in!\");\n    }\n  },\n  data() {\n      return {\n          newUser: this.$cookie.get('isNewUser'),\n          user_data_static: null,\n          user_data_dynamic: null,\n          loc_data_dynamic: null\n      }\n  },\n  methods: {\n    //creates a new user in the database\n    database_create_user: async function(user) {\n        try{ \n            await firebase.database().ref('user-data/' + user.uid).set({\n                displayName: user.displayName,\n                email: user.email,\n                uid: user.uid,\n                role: \"volunteer\",\n                site: null,\n                skills: null\n            }, function(error) {\n                if (error) {\n                // The write failed...\n                console.log(\"Error: Could not add user to database!\");\n                console.log(error);\n                }\n                else {\n                // Data saved successfully!\n                }\n            });\n            console.log(\"It worked??\");\n        } catch (error) {\n            console.log(\"Caught error:\");\n            console.log(error);\n        }\n    },\n    database_get_user_data: async function(user_id) {\n        // loads user data into \"user_data_static\" once\n        // firebase.database().ref('user-data/' + user_id).once('value').then(function(snapshot) {\n        //     this.user_data_static = snapshot.val();\n        // });\n        const snapshot = await firebase.database().ref('user-data/' + user_id).once('value');\n        //const snapshot = await firebase.database().ref('test/').once('value');\n        this.user_data_static = snapshot.val();\n        console.log(snapshot.val());\n        console.log(user_id);\n    },\n    database_init_user_data_update_loop: function(user_id) {\n        // sets up update loop for loading data into \"user_data_dynamic\"\n        // auto - updates user data every time the data change \n        firebase.database().ref('user-data/' + user_id).on('value', function(snapshot) {\n            this.user_data_dynamic = snapshot.val();\n        });\n        //console.log(snapshot.val());\n    },\n    database_init_location_data_update_loop: function(user_id) {\n        firebase.database().ref('location-data/').on('value', function(snapshot) {\n            this.location_data_dynamic = snapshot.val();\n            console.log(user_id);\n        });\n    }\n  }\n}\n</script>\n\n<style>\n#thing {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 200px;\n}\n</style>"],"sourceRoot":"src/views"}]}