{"remainingRequest":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/thread-loader/dist/cjs.js!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/babel-loader/lib/index.js!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue","mtime":1608337661250},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGZpcmViYXNlIGZyb20gJ2ZpcmViYXNlL2FwcCc7CmltcG9ydCAnZmlyZWJhc2UvYXV0aCc7CmltcG9ydCAnZmlyZWJhc2UvZGF0YWJhc2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3NlY29uZCcsCiAgY29tcG9uZW50czoge30sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciB1c2VyID0gZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyOwoKICAgIGlmICh1c2VyKSB7CiAgICAgIC8vIFVzZXIgaXMgc2lnbmVkIGluLgogICAgICBpZiAodGhpcy5uZXdVc2VyID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy5kYXRhYmFzZV9jcmVhdGVfdXNlcih1c2VyKTsKICAgICAgfQoKICAgICAgdGhpcy5kYXRhYmFzZV9nZXRfdXNlcl9kYXRhKHVzZXIudWlkKTsKICAgICAgdGhpcy5kYXRhYmFzZV9pbml0X3VzZXJfZGF0YV91cGRhdGVfbG9vcCh1c2VyLnVpZCk7IC8vcmVkaXJlY3QodGVzdC5odG1sKQogICAgfSBlbHNlIHsKICAgICAgLy8gTm8gdXNlciBpcyBzaWduZWQgaW4uCiAgICAgIGNvbnNvbGUubG9nKCJFcnJvcjogTm8gdXNlciBpcyBzaWduZWQgaW4hIik7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmV3VXNlcjogdGhpcy4kY29va2llLmdldCgnaXNOZXdVc2VyJyksCiAgICAgIHVzZXJfZGF0YV9zdGF0aWM6IG51bGwsCiAgICAgIHVzZXJfZGF0YV9keW5hbWljOiBudWxsLAogICAgICBsb2NfZGF0YV9keW5hbWljOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy9jcmVhdGVzIGEgbmV3IHVzZXIgaW4gdGhlIGRhdGFiYXNlCiAgICBkYXRhYmFzZV9jcmVhdGVfdXNlcjogZnVuY3Rpb24gZGF0YWJhc2VfY3JlYXRlX3VzZXIodXNlcikgewogICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndXNlci1kYXRhLycgKyB1c2VyLnVpZCkuc2V0KHsKICAgICAgICBkaXNwbGF5TmFtZTogdXNlci5kaXNwbGF5TmFtZSwKICAgICAgICBlbWFpbDogdXNlci5lbWFpbCwKICAgICAgICB1aWQ6IHVzZXIudWlkLAogICAgICAgIHJvbGU6ICJ2b2x1bnRlZXIiLAogICAgICAgIHNpdGU6IG51bGwsCiAgICAgICAgc2tpbGxzOiBudWxsCiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGlmIChlcnJvcikgewogICAgICAgICAgLy8gVGhlIHdyaXRlIGZhaWxlZC4uLgogICAgICAgICAgY29uc29sZS5sb2coIkVycm9yOiBDb3VsZCBub3QgYWRkIHVzZXIgdG8gZGF0YWJhc2UhIik7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgfSBlbHNlIHsvLyBEYXRhIHNhdmVkIHN1Y2Nlc3NmdWxseSEKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGRhdGFiYXNlX2dldF91c2VyX2RhdGE6IGZ1bmN0aW9uIGRhdGFiYXNlX2dldF91c2VyX2RhdGEodXNlcl9pZCkgewogICAgICAvLyBsb2FkcyB1c2VyIGRhdGEgaW50byAidXNlcl9kYXRhX3N0YXRpYyIgb25jZQogICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndXNlci1kYXRhLycgKyB1c2VyX2lkKS5vbmNlKCd2YWx1ZScpLnRoZW4oZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgdGhpcy51c2VyX2RhdGFfc3RhdGljID0gc25hcHNob3QudmFsKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGRhdGFiYXNlX2luaXRfdXNlcl9kYXRhX3VwZGF0ZV9sb29wOiBmdW5jdGlvbiBkYXRhYmFzZV9pbml0X3VzZXJfZGF0YV91cGRhdGVfbG9vcCh1c2VyX2lkKSB7CiAgICAgIC8vIHNldHMgdXAgdXBkYXRlIGxvb3AgZm9yIGxvYWRpbmcgZGF0YSBpbnRvICJ1c2VyX2RhdGFfZHluYW1pYyIKICAgICAgLy8gYXV0byAtIHVwZGF0ZXMgdXNlciBkYXRhIGV2ZXJ5IHRpbWUgdGhlIGRhdGEgY2hhbmdlIAogICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndXNlci1kYXRhLycgKyB1c2VyX2lkKS5vbigndmFsdWUnLCBmdW5jdGlvbiAoc25hcHNob3QpIHsKICAgICAgICB0aGlzLnVzZXJfZGF0YV9keW5hbWljID0gc25hcHNob3QudmFsKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGRhdGFiYXNlX2luaXRfbG9jYXRpb25fZGF0YV91cGRhdGVfbG9vcDogZnVuY3Rpb24gZGF0YWJhc2VfaW5pdF9sb2NhdGlvbl9kYXRhX3VwZGF0ZV9sb29wKHVzZXJfaWQpIHsKICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2xvY2F0aW9uLWRhdGEvJykub24oJ3ZhbHVlJywgZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgdGhpcy5sb2NhdGlvbl9kYXRhX2R5bmFtaWMgPSBzbmFwc2hvdC52YWwoKTsKICAgICAgICBjb25zb2xlLmxvZyh1c2VyX2lkKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SecondUrl.vue"],"names":[],"mappings":";;;;;;;;AASA,OAAA,QAAA,MAAA,cAAA;AACA,OAAA,eAAA;AACA,OAAA,mBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAIA,EAAA,OAJA,qBAIA;AACA,QAAA,IAAA,GAAA,QAAA,CAAA,IAAA,GAAA,WAAA;;AACA,QAAA,IAAA,EAAA;AACA;AACA,UAAA,KAAA,OAAA,KAAA,IAAA,EAAA;AACA,aAAA,oBAAA,CAAA,IAAA;AACA;;AACA,WAAA,sBAAA,CAAA,IAAA,CAAA,GAAA;AACA,WAAA,mCAAA,CAAA,IAAA,CAAA,GAAA,EANA,CAOA;AACA,KARA,MASA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,8BAAA;AACA;AACA,GAnBA;AAoBA,EAAA,IApBA,kBAoBA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KAAA,OAAA,CAAA,GAAA,CAAA,WAAA,CADA;AAEA,MAAA,gBAAA,EAAA,IAFA;AAGA,MAAA,iBAAA,EAAA,IAHA;AAIA,MAAA,gBAAA,EAAA;AAJA,KAAA;AAMA,GA3BA;AA4BA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,oBAAA,EAAA,8BAAA,IAAA,EAAA;AACA,MAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,eAAA,IAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,QAAA,WAAA,EAAA,IAAA,CAAA,WADA;AAEA,QAAA,KAAA,EAAA,IAAA,CAAA,KAFA;AAGA,QAAA,GAAA,EAAA,IAAA,CAAA,GAHA;AAIA,QAAA,IAAA,EAAA,WAJA;AAKA,QAAA,IAAA,EAAA,IALA;AAMA,QAAA,MAAA,EAAA;AANA,OAAA,EAOA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,wCAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,SAJA,MAKA,CACA;AACA;AACA,OAhBA;AAiBA,KApBA;AAqBA,IAAA,sBAAA,EAAA,gCAAA,OAAA,EAAA;AACA;AACA,MAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,eAAA,OAAA,EAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,aAAA,gBAAA,GAAA,QAAA,CAAA,GAAA,EAAA;AACA,OAFA;AAGA,KA1BA;AA2BA,IAAA,mCAAA,EAAA,6CAAA,OAAA,EAAA;AACA;AACA;AACA,MAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,eAAA,OAAA,EAAA,EAAA,CAAA,OAAA,EAAA,UAAA,QAAA,EAAA;AACA,aAAA,iBAAA,GAAA,QAAA,CAAA,GAAA,EAAA;AACA,OAFA;AAGA,KAjCA;AAkCA,IAAA,uCAAA,EAAA,iDAAA,OAAA,EAAA;AACA,MAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,gBAAA,EAAA,EAAA,CAAA,OAAA,EAAA,UAAA,QAAA,EAAA;AACA,aAAA,qBAAA,GAAA,QAAA,CAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,OAHA;AAIA;AAvCA;AA5BA,CAAA","sourcesContent":["<template>\n  <div>\n    <div id=\"thing\">\n        <h3>{{ newUser }}</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nexport default {\n  name: 'second',\n  components: {\n  },\n  created() {\n    const user = firebase.auth().currentUser;\n    if (user) {\n        // User is signed in.\n        if (this.newUser === true){\n        this.database_create_user(user);\n        }\n        this.database_get_user_data(user.uid);\n        this.database_init_user_data_update_loop(user.uid);\n        //redirect(test.html)\n    }\n    else {\n        // No user is signed in.\n        console.log(\"Error: No user is signed in!\");\n    }\n  },\n  data() {\n      return {\n          newUser: this.$cookie.get('isNewUser'),\n          user_data_static: null,\n          user_data_dynamic: null,\n          loc_data_dynamic: null\n      }\n  },\n  methods: {\n    //creates a new user in the database\n    database_create_user: function(user) {\n        firebase.database().ref('user-data/' + user.uid).set({\n            displayName: user.displayName,\n            email: user.email,\n            uid: user.uid,\n            role: \"volunteer\",\n            site: null,\n            skills: null\n        }, function(error) {\n            if (error) {\n            // The write failed...\n            console.log(\"Error: Could not add user to database!\");\n            console.log(error);\n            }\n            else {\n            // Data saved successfully!\n            }\n        });\n    },\n    database_get_user_data: function(user_id) {\n        // loads user data into \"user_data_static\" once\n        firebase.database().ref('user-data/' + user_id).once('value').then(function(snapshot) {\n            this.user_data_static = snapshot.val();\n        });\n    },\n    database_init_user_data_update_loop: function(user_id) {\n        // sets up update loop for loading data into \"user_data_dynamic\"\n        // auto - updates user data every time the data change \n        firebase.database().ref('user-data/' + user_id).on('value', function(snapshot) {\n            this.user_data_dynamic = snapshot.val();\n        });\n    },\n    database_init_location_data_update_loop: function(user_id) {\n        firebase.database().ref('location-data/').on('value', function(snapshot) {\n            this.location_data_dynamic = snapshot.val();\n            console.log(user_id);\n        });\n    }\n  }\n}\n</script>\n\n<style>\n#thing {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 200px;\n}\n</style>"],"sourceRoot":"src/views"}]}