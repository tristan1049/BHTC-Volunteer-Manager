{"remainingRequest":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/babel-loader/lib/index.js!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue","mtime":1608342582461},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RyaXN0YW5jdWxwL0RvY3VtZW50cy9Db2RlL0NvZGVfRm9yX0dvb2QvRXhhbXBsZVZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZS9hcHAnOwppbXBvcnQgJ2ZpcmViYXNlL2F1dGgnOwppbXBvcnQgJ2ZpcmViYXNlL2RhdGFiYXNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzZWNvbmQnLAogIGNvbXBvbmVudHM6IHt9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgdXNlciA9IGZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlcjsKCiAgICBpZiAodXNlcikgewogICAgICAvLyBVc2VyIGlzIHNpZ25lZCBpbi4KICAgICAgaWYgKHRoaXMubmV3VXNlcikgewogICAgICAgIHRoaXMuZGF0YWJhc2VfY3JlYXRlX3VzZXIodXNlcik7CiAgICAgIH0KCiAgICAgIHRoaXMuZGF0YWJhc2VfZ2V0X3VzZXJfZGF0YSh1c2VyLnVpZCk7IC8vdGhpcy5kYXRhYmFzZV9pbml0X3VzZXJfZGF0YV91cGRhdGVfbG9vcCh1c2VyLnVpZCk7CiAgICAgIC8vcmVkaXJlY3QodGVzdC5odG1sKQogICAgfSBlbHNlIHsKICAgICAgLy8gTm8gdXNlciBpcyBzaWduZWQgaW4uCiAgICAgIGNvbnNvbGUubG9nKCJFcnJvcjogTm8gdXNlciBpcyBzaWduZWQgaW4hIik7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmV3VXNlcjogdGhpcy4kY29va2llLmdldCgnaXNOZXdVc2VyJyksCiAgICAgIHVzZXJfZGF0YV9zdGF0aWM6IG51bGwsCiAgICAgIHVzZXJfZGF0YV9keW5hbWljOiBudWxsLAogICAgICBsb2NfZGF0YV9keW5hbWljOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy9jcmVhdGVzIGEgbmV3IHVzZXIgaW4gdGhlIGRhdGFiYXNlCiAgICBkYXRhYmFzZV9jcmVhdGVfdXNlcjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2RhdGFiYXNlX2NyZWF0ZV91c2VyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHVzZXIpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndXNlci1kYXRhLycgKyB1c2VyLnVpZCkuc2V0KHsKICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHVzZXIuZGlzcGxheU5hbWUsCiAgICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgICAgICAgICAgICB1aWQ6IHVzZXIudWlkLAogICAgICAgICAgICAgICAgICByb2xlOiAidm9sdW50ZWVyIiwKICAgICAgICAgICAgICAgICAgc2l0ZTogbnVsbCwKICAgICAgICAgICAgICAgICAgc2tpbGxzOiBudWxsCiAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIHdyaXRlIGZhaWxlZC4uLgogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJFcnJvcjogQ291bGQgbm90IGFkZCB1c2VyIHRvIGRhdGFiYXNlISIpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsvLyBEYXRhIHNhdmVkIHN1Y2Nlc3NmdWxseSEKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBkYXRhYmFzZV9jcmVhdGVfdXNlcihfeCkgewogICAgICAgIHJldHVybiBfZGF0YWJhc2VfY3JlYXRlX3VzZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGRhdGFiYXNlX2NyZWF0ZV91c2VyOwogICAgfSgpLAogICAgZGF0YWJhc2VfZ2V0X3VzZXJfZGF0YTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2RhdGFiYXNlX2dldF91c2VyX2RhdGEgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHVzZXJfaWQpIHsKICAgICAgICB2YXIgc25hcHNob3Q7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndXNlci1kYXRhLycgKyB1c2VyX2lkKS5vbmNlKCd2YWx1ZScpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBzbmFwc2hvdCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgLy9jb25zdCBzbmFwc2hvdCA9IGF3YWl0IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd0ZXN0LycpLm9uY2UoJ3ZhbHVlJyk7CiAgICAgICAgICAgICAgICB0aGlzLnVzZXJfZGF0YV9zdGF0aWMgPSBzbmFwc2hvdC52YWwoKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHNuYXBzaG90LnZhbCgpKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJfaWQpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBkYXRhYmFzZV9nZXRfdXNlcl9kYXRhKF94MikgewogICAgICAgIHJldHVybiBfZGF0YWJhc2VfZ2V0X3VzZXJfZGF0YS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZGF0YWJhc2VfZ2V0X3VzZXJfZGF0YTsKICAgIH0oKSwKICAgIGRhdGFiYXNlX2luaXRfdXNlcl9kYXRhX3VwZGF0ZV9sb29wOiBmdW5jdGlvbiBkYXRhYmFzZV9pbml0X3VzZXJfZGF0YV91cGRhdGVfbG9vcCh1c2VyX2lkKSB7CiAgICAgIC8vIHNldHMgdXAgdXBkYXRlIGxvb3AgZm9yIGxvYWRpbmcgZGF0YSBpbnRvICJ1c2VyX2RhdGFfZHluYW1pYyIKICAgICAgLy8gYXV0byAtIHVwZGF0ZXMgdXNlciBkYXRhIGV2ZXJ5IHRpbWUgdGhlIGRhdGEgY2hhbmdlIAogICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndXNlci1kYXRhLycgKyB1c2VyX2lkKS5vbigndmFsdWUnLCBmdW5jdGlvbiAoc25hcHNob3QpIHsKICAgICAgICB0aGlzLnVzZXJfZGF0YV9keW5hbWljID0gc25hcHNob3QudmFsKCk7CiAgICAgIH0pOyAvL2NvbnNvbGUubG9nKHNuYXBzaG90LnZhbCgpKTsKICAgIH0sCiAgICBkYXRhYmFzZV9pbml0X2xvY2F0aW9uX2RhdGFfdXBkYXRlX2xvb3A6IGZ1bmN0aW9uIGRhdGFiYXNlX2luaXRfbG9jYXRpb25fZGF0YV91cGRhdGVfbG9vcCh1c2VyX2lkKSB7CiAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdsb2NhdGlvbi1kYXRhLycpLm9uKCd2YWx1ZScsIGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgICAgIHRoaXMubG9jYXRpb25fZGF0YV9keW5hbWljID0gc25hcHNob3QudmFsKCk7CiAgICAgICAgY29uc29sZS5sb2codXNlcl9pZCk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SecondUrl.vue"],"names":[],"mappings":";;;;;;;;;;;AAUA,OAAA,QAAA,MAAA,cAAA;AACA,OAAA,eAAA;AACA,OAAA,mBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAIA,EAAA,OAJA,qBAIA;AACA,QAAA,IAAA,GAAA,QAAA,CAAA,IAAA,GAAA,WAAA;;AACA,QAAA,IAAA,EAAA;AACA;AACA,UAAA,KAAA,OAAA,EAAA;AACA,aAAA,oBAAA,CAAA,IAAA;AACA;;AACA,WAAA,sBAAA,CAAA,IAAA,CAAA,GAAA,EALA,CAMA;AACA;AACA,KARA,MASA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,8BAAA;AACA;AACA,GAnBA;AAoBA,EAAA,IApBA,kBAoBA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KAAA,OAAA,CAAA,GAAA,CAAA,WAAA,CADA;AAEA,MAAA,gBAAA,EAAA,IAFA;AAGA,MAAA,iBAAA,EAAA,IAHA;AAIA,MAAA,gBAAA,EAAA;AAJA,KAAA;AAMA,GA3BA;AA4BA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,oBAAA;AAAA,0FAAA,iBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,eAAA,IAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,kBAAA,WAAA,EAAA,IAAA,CAAA,WADA;AAEA,kBAAA,KAAA,EAAA,IAAA,CAAA,KAFA;AAGA,kBAAA,GAAA,EAAA,IAAA,CAAA,GAHA;AAIA,kBAAA,IAAA,EAAA,WAJA;AAKA,kBAAA,IAAA,EAAA,IALA;AAMA,kBAAA,MAAA,EAAA;AANA,iBAAA,EAOA,UAAA,KAAA,EAAA;AACA,sBAAA,KAAA,EAAA;AACA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,wCAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,mBAJA,MAKA,CACA;AACA;AACA,iBAhBA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFA;AAqBA,IAAA,sBAAA;AAAA,4FAAA,kBAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,eAAA,OAAA,EAAA,IAAA,CAAA,OAAA,CALA;;AAAA;AAKA,gBAAA,QALA;AAMA;AACA,qBAAA,gBAAA,GAAA,QAAA,CAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,OAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OArBA;AAgCA,IAAA,mCAAA,EAAA,6CAAA,OAAA,EAAA;AACA;AACA;AACA,MAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,eAAA,OAAA,EAAA,EAAA,CAAA,OAAA,EAAA,UAAA,QAAA,EAAA;AACA,aAAA,iBAAA,GAAA,QAAA,CAAA,GAAA,EAAA;AACA,OAFA,EAHA,CAMA;AACA,KAvCA;AAwCA,IAAA,uCAAA,EAAA,iDAAA,OAAA,EAAA;AACA,MAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,gBAAA,EAAA,EAAA,CAAA,OAAA,EAAA,UAAA,QAAA,EAAA;AACA,aAAA,qBAAA,GAAA,QAAA,CAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,OAHA;AAIA;AA7CA;AA5BA,CAAA","sourcesContent":["<template>\n  <div>\n    <div id=\"thing\">\n        <h3>Is new user: {{ newUser }}</h3>\n        <h3>User data: {{ user_data_static }}</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nexport default {\n  name: 'second',\n  components: {\n  },\n  created() {\n    const user = firebase.auth().currentUser;\n    if (user) {\n        // User is signed in.\n        if (this.newUser){\n            this.database_create_user(user);\n        }\n        this.database_get_user_data(user.uid);\n        //this.database_init_user_data_update_loop(user.uid);\n        //redirect(test.html)\n    }\n    else {\n        // No user is signed in.\n        console.log(\"Error: No user is signed in!\");\n    }\n  },\n  data() {\n      return {\n          newUser: this.$cookie.get('isNewUser'),\n          user_data_static: null,\n          user_data_dynamic: null,\n          loc_data_dynamic: null\n      }\n  },\n  methods: {\n    //creates a new user in the database\n    database_create_user: async function(user) {\n        await firebase.database().ref('user-data/' + user.uid).set({\n            displayName: user.displayName,\n            email: user.email,\n            uid: user.uid,\n            role: \"volunteer\",\n            site: null,\n            skills: null\n        }, function(error) {\n            if (error) {\n            // The write failed...\n            console.log(\"Error: Could not add user to database!\");\n            console.log(error);\n            }\n            else {\n            // Data saved successfully!\n            }\n        });\n    },\n    database_get_user_data: async function(user_id) {\n        // loads user data into \"user_data_static\" once\n        // firebase.database().ref('user-data/' + user_id).once('value').then(function(snapshot) {\n        //     this.user_data_static = snapshot.val();\n        // });\n        const snapshot = await firebase.database().ref('user-data/' + user_id).once('value');\n        //const snapshot = await firebase.database().ref('test/').once('value');\n        this.user_data_static = snapshot.val();\n        console.log(snapshot.val());\n        console.log(user_id);\n    },\n    database_init_user_data_update_loop: function(user_id) {\n        // sets up update loop for loading data into \"user_data_dynamic\"\n        // auto - updates user data every time the data change \n        firebase.database().ref('user-data/' + user_id).on('value', function(snapshot) {\n            this.user_data_dynamic = snapshot.val();\n        });\n        //console.log(snapshot.val());\n    },\n    database_init_location_data_update_loop: function(user_id) {\n        firebase.database().ref('location-data/').on('value', function(snapshot) {\n            this.location_data_dynamic = snapshot.val();\n            console.log(user_id);\n        });\n    }\n  }\n}\n</script>\n\n<style>\n#thing {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 200px;\n}\n</style>"],"sourceRoot":"src/views"}]}