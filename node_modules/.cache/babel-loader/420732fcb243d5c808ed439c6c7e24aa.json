{"remainingRequest":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/babel-loader/lib/index.js!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/src/views/SecondUrl.vue","mtime":1610053345572},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tristanculp/Documents/Code/Code_For_Good/ExampleVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RyaXN0YW5jdWxwL0RvY3VtZW50cy9Db2RlL0NvZGVfRm9yX0dvb2QvRXhhbXBsZVZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZS9hcHAiOwppbXBvcnQgJ2ZpcmViYXNlL2F1dGgnOwppbXBvcnQgJ2ZpcmViYXNlL2RhdGFiYXNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzZWNvbmQnLAogIGNvbXBvbmVudHM6IHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICBmaXJlYmFzZS5hdXRoKCkub25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIGlmICh1c2VyKSB7CiAgICAgICAgLy8gVXNlciBpcyBzaWduZWQgaW4sIGNyZWF0ZSB1c2VyIGlmIG5ldwogICAgICAgIGlmIChzZWxmLm5ld1VzZXIpIHsKICAgICAgICAgIHNlbGYuY3JlYXRlVXNlcih1c2VyKTsKICAgICAgICB9IC8vIFNldCB1c2VyX2RhdGEgYW5kIGNoZWNrIGZvciB1cGRhdGVzIHRvIGl0CgoKICAgICAgICBzZWxmLmdldFVzZXIodXNlci51aWQpOwogICAgICAgIHNlbGYuaW5pdExvb3AoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBObyB1c2VyIGlzIHNpZ25lZCBpbi4KICAgICAgICBjb25zb2xlLmxvZygiRXJyb3I6IE5vIHVzZXIgaXMgc2lnbmVkIGluISIpOwogICAgICB9CiAgICB9KTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuZXdVc2VyOiB0aGlzLiRjb29raWUuZ2V0KCdpc05ld1VzZXInKSwKICAgICAgdXNlcl9kYXRhOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlVXNlcjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2NyZWF0ZVVzZXIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodXNlcikgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd1c2VyLWRhdGEvJyArIHVzZXIudWlkKS5zZXQoewogICAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogdXNlci5kaXNwbGF5TmFtZSwKICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsCiAgICAgICAgICAgICAgICAgIHVpZDogdXNlci51aWQsCiAgICAgICAgICAgICAgICAgIHJvbGU6ICJ2b2x1bnRlZXIiLAogICAgICAgICAgICAgICAgICBzaXRlOiBudWxsLAogICAgICAgICAgICAgICAgICBza2lsbHM6IG51bGwKICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICAvLyBUaGUgd3JpdGUgZmFpbGVkLi4uCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkVycm9yOiBDb3VsZCBub3QgYWRkIHVzZXIgdG8gZGF0YWJhc2UhIik7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAvLyBEYXRhIHNhdmVkIHN1Y2Nlc3NmdWxseSEKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBjcmVhdGVVc2VyKF94KSB7CiAgICAgICAgcmV0dXJuIF9jcmVhdGVVc2VyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjcmVhdGVVc2VyOwogICAgfSgpLAogICAgZ2V0VXNlcjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldFVzZXIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHVzZXJfdWlkKSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigndXNlci1kYXRhLycgKyB1c2VyX3VpZCkub25jZSgndmFsdWUnKS50aGVuKGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gc25hcHNob3QudmFsKCk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgdGhpcy51c2VyX2RhdGEgPSBkYXRhOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRVc2VyKF94MikgewogICAgICAgIHJldHVybiBfZ2V0VXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0VXNlcjsKICAgIH0oKSwKICAgIGluaXRMb29wOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfaW5pdExvb3AgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKHVzZXJfaWQpIHsKICAgICAgICB2YXIgc2VsZjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc2VsZiA9IHRoaXM7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3VzZXItZGF0YS8nICsgdXNlcl9pZCkub24oJ3ZhbHVlJywgZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgICAgICAgICAgIHZhciBkYXRhID0gW107CiAgICAgICAgICAgICAgICAgIHNuYXBzaG90LmZvckVhY2goZnVuY3Rpb24gKGNoaWxkU25hcHNob3QpIHsKICAgICAgICAgICAgICAgICAgICBkYXRhLnB1c2goY2hpbGRTbmFwc2hvdC52YWwoKSk7IC8vIEZpbGwgdGhlIGxvY2FsIGRhdGEgcHJvcGVydHkgd2l0aCBGaXJlYmFzZSBkYXRhCgogICAgICAgICAgICAgICAgICAgIHNlbGYudXNlcl9kYXRhID0gZGF0YTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gaW5pdExvb3AoX3gzKSB7CiAgICAgICAgcmV0dXJuIF9pbml0TG9vcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaW5pdExvb3A7CiAgICB9KCkKICB9Cn07"},{"version":3,"sources":["SecondUrl.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div id=\"thing\">\n        <h3>Is new user: {{ newUser }}</h3>\n        <h3>User data: {{ user_data }}</h3>\n        <router-link to='/third'>\n            <button>Take me to Third Page!</button>\n        </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/database';\n\nexport default {\n  name: 'second',\n  components: {\n  },\n  mounted() {\n    let self = this;\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            // User is signed in, create user if new\n            if (self.newUser){\n                self.createUser(user);\n            }\n            // Set user_data and check for updates to it\n            self.getUser(user.uid);\n            self.initLoop()\n        }\n        else {\n            // No user is signed in.\n            console.log(\"Error: No user is signed in!\");\n        }\n    });\n  },\n  data() {\n      return {\n          newUser: this.$cookie.get('isNewUser'),\n          user_data: null\n      }\n  },\n  methods: {\n      createUser: async function(user) {\n        await firebase.database().ref('user-data/' + user.uid).set({\n            displayName: user.displayName,\n            email: user.email,\n            uid: user.uid,\n            role: \"volunteer\",\n            site: null,\n            skills: null\n        }, function(error) {\n            if (error) {\n                // The write failed...\n                console.log(\"Error: Could not add user to database!\");\n                console.log(error);\n                return false;\n            }\n            else {\n                // Data saved successfully!\n                return true;\n            }\n        });\n      },\n      getUser: async function(user_uid) {\n        var data = await firebase.database().ref('user-data/' + user_uid).once('value').then((snapshot) => {\n            return snapshot.val();\n        });\n        this.user_data = data;\n      },\n      initLoop: async function(user_id) {\n        let self = this;\n        await firebase.database().ref('user-data/' + user_id).on('value', function(snapshot) {\n            let data = [];\n            snapshot.forEach(function(childSnapshot) {\n                data.push(childSnapshot.val());\n                // Fill the local data property with Firebase data\n                self.user_data = data;\n    });\n        });\n      }\n  }\n}\n</script>\n\n<style>\n#thing {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 200px;\n}\n</style>"],"sourceRoot":"src/views"}]}